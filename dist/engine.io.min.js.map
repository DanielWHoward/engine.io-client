{"version":3,"file":"engine.io.min.js","sources":["../node_modules/has-cors/index.js","../build/esm/globalThis.browser.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/yeast/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../build/esm/transport.js","../node_modules/parseqs/index.js","../build/esm/transports/polling.js","../build/esm/transports/polling-xhr.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/index.js","../node_modules/parseuri/index.js","../build/esm/socket.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["hasCorsModule","exports","XMLHttpRequest","err","globalThis","self","window","Function","XMLHttpRequest$1","opts","xdomain","hasCORS","e","concat","join","pick","obj","_len","arguments","length","attr","Array","_key","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter_1","Emitter","key","prototype","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","removeListener","removeAllListeners","removeEventListener","cb","callbacks","i","splice","emit","args","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","prev","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Transport","_Emitter","_inherits","_super","_createSuper","_this","_classCallCheck","writable","_assertThisInitialized","query","readyState","socket","_createClass","value","msg","desc","Error","description","_get","_getPrototypeOf","doOpen","doClose","onClose","packets","write","packet","onPacket","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","yeast_1","parseqs","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","_Transport","polling","get","poll","onPause","_this2","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePayload","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","hostname","indexOf","path","empty","hasXHR2","responseType","XHR","_Polling","location","isSSL","protocol","xd","xs","forceBase64","undefined","_extends","Request","uri","req","request","method","onError","onData","pollXhr","_super2","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","_loop","lastPacket","name","transports","websocket","re","parts","parseuri","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","_typeof","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","o","clone","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","_this6","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j"],"mappings":";;;;;i7FASA,IACEA,EAAcC,QAA6B,oBAAnBC,gBACtB,oBAAqB,IAAIA,cAC7B,CAAE,MAAOC,GAGPH,EAAAC,SAAiB,CACnB,iBChBAG,EACwB,oBAATC,KACAA,KAEgB,oBAAXC,OACLA,OAGAC,SAAS,cAATA,GCLA,SAAAC,EAAUC,GACrB,IAAMC,EAAUD,EAAKC,QAErB,IACI,GAAI,oBAAuBR,kBAAoBQ,GAAWC,GACtD,OAAO,IAAIT,cAEnB,CACA,MAAOU,GAAK,CACZ,IAAKF,EACD,IACI,OAAO,IAAIN,EAAW,CAAC,UAAUS,OAAO,UAAUC,KAAK,OAAM,oBACjE,CACA,MAAOF,GAAK,CAEpB,CCjBO,SAASG,EAAKC,GAAc,IAAAC,IAAAA,EAAAC,UAAAC,OAANC,MAAIC,MAAAJ,EAAAA,EAAAA,OAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,EAAAJ,GAAAA,UAAAI,GAC7B,OAAOF,EAAKG,QAAO,SAACC,EAAKC,GAIrB,OAHIT,EAAIU,eAAeD,KACnBD,EAAIC,GAAKT,EAAIS,IAEVD,CACV,GAAE,CAAE,EACT,CAEA,IAAMG,EAAqBC,WACrBC,EAAuBC,aACtB,SAASC,EAAsBf,EAAKP,GACnCA,EAAKuB,iBACLhB,EAAIiB,aAAeN,EAAmBO,KAAK9B,GAC3CY,EAAImB,eAAiBN,EAAqBK,KAAK9B,KAG/CY,EAAIiB,aAAeL,WAAWM,KAAK9B,GACnCY,EAAImB,eAAiBL,aAAaI,KAAK9B,GAE/C,CChBA,IAAegC,EAAGC,EAQlB,SAASA,EAAQrB,GACf,GAAIA,EAAK,OAWX,SAAeA,GACb,IAAK,IAAIsB,KAAOD,EAAQE,UACtBvB,EAAIsB,GAAOD,EAAQE,UAAUD,GAE/B,OAAOtB,CACT,CAhBkBwB,CAAMxB,EACxB,CA0BAqB,EAAQE,UAAUE,GAClBJ,EAAQE,UAAUG,iBAAmB,SAASC,EAAOC,GAInD,OAHAC,KAAKC,WAAaD,KAAKC,YAAc,CAAA,GACpCD,KAAKC,WAAW,IAAMH,GAASE,KAAKC,WAAW,IAAMH,IAAU,IAC7DI,KAAKH,GACDC,IACT,EAYAR,EAAQE,UAAUS,KAAO,SAASL,EAAOC,GACvC,SAASH,IACPI,KAAKI,IAAIN,EAAOF,GAChBG,EAAGM,MAAML,KAAM3B,UAChB,CAID,OAFAuB,EAAGG,GAAKA,EACRC,KAAKJ,GAAGE,EAAOF,GACRI,IACT,EAYAR,EAAQE,UAAUU,IAClBZ,EAAQE,UAAUY,eAClBd,EAAQE,UAAUa,mBAClBf,EAAQE,UAAUc,oBAAsB,SAASV,EAAOC,GAItD,GAHAC,KAAKC,WAAaD,KAAKC,YAAc,CAAA,EAGjC,GAAK5B,UAAUC,OAEjB,OADA0B,KAAKC,WAAa,GACXD,KAIT,IAUIS,EAVAC,EAAYV,KAAKC,WAAW,IAAMH,GACtC,IAAKY,EAAW,OAAOV,KAGvB,GAAI,GAAK3B,UAAUC,OAEjB,cADO0B,KAAKC,WAAW,IAAMH,GACtBE,KAKT,IAAK,IAAIW,EAAI,EAAGA,EAAID,EAAUpC,OAAQqC,IAEpC,IADAF,EAAKC,EAAUC,MACJZ,GAAMU,EAAGV,KAAOA,EAAI,CAC7BW,EAAUE,OAAOD,EAAG,GACpB,KACD,CASH,OAJyB,IAArBD,EAAUpC,eACL0B,KAAKC,WAAW,IAAMH,GAGxBE,IACT,EAUAR,EAAQE,UAAUmB,KAAO,SAASf,GAChCE,KAAKC,WAAaD,KAAKC,YAAc,CAAA,EAKrC,IAHA,IAAIa,EAAO,IAAItC,MAAMH,UAAUC,OAAS,GACpCoC,EAAYV,KAAKC,WAAW,IAAMH,GAE7Ba,EAAI,EAAGA,EAAItC,UAAUC,OAAQqC,IACpCG,EAAKH,EAAI,GAAKtC,UAAUsC,GAG1B,GAAID,EAEG,CAAIC,EAAI,EAAb,IAAK,IAAWI,GADhBL,EAAYA,EAAUM,MAAM,IACI1C,OAAQqC,EAAII,IAAOJ,EACjDD,EAAUC,GAAGN,MAAML,KAAMc,EADKxC,CAKlC,OAAO0B,IACT,EAGAR,EAAQE,UAAUuB,aAAezB,EAAQE,UAAUmB,KAUnDrB,EAAQE,UAAUwB,UAAY,SAASpB,GAErC,OADAE,KAAKC,WAAaD,KAAKC,YAAc,CAAA,EAC9BD,KAAKC,WAAW,IAAMH,IAAU,EACzC,EAUAN,EAAQE,UAAUyB,aAAe,SAASrB,GACxC,QAAUE,KAAKkB,UAAUpB,GAAOxB,MAClC,EC/KA,IAAM8C,EAAeC,OAAOC,OAAO,MACnCF,EAAmB,KAAI,IACvBA,EAAoB,MAAI,IACxBA,EAAmB,KAAI,IACvBA,EAAmB,KAAI,IACvBA,EAAsB,QAAI,IAC1BA,EAAsB,QAAI,IAC1BA,EAAmB,KAAI,IACvB,IAAMG,EAAuBF,OAAOC,OAAO,MAC3CD,OAAOG,KAAKJ,GAAcK,SAAQ,SAAAhC,GAC9B8B,EAAqBH,EAAa3B,IAAQA,CAC9C,ICPA,IDQA,IAAMiC,EAAe,CAAEC,KAAM,QAASC,KAAM,gBEXtCC,EAAiC,mBAATC,MACT,oBAATA,MACqC,6BAAzCT,OAAO3B,UAAUqC,SAASC,KAAKF,MACjCG,EAA+C,mBAAhBC,YAO/BC,EAAe,SAAHC,EAAoBC,EAAgBC,GAAa,IALpDnE,EAKSwD,EAAIS,EAAJT,KAAMC,EAAIQ,EAAJR,KAC1B,OAAIC,GAAkBD,aAAgBE,KAC9BO,EACOC,EAASV,GAGTW,EAAmBX,EAAMU,GAG/BL,IACJL,aAAgBM,cAfV/D,EAegCyD,EAdN,mBAAvBM,YAAYM,OACpBN,YAAYM,OAAOrE,GACnBA,GAAOA,EAAIsE,kBAAkBP,cAa3BG,EACOC,EAASV,GAGTW,EAAmB,IAAIT,KAAK,CAACF,IAAQU,GAI7CA,EAASlB,EAAaO,IAASC,GAAQ,IAClD,EACMW,EAAqB,SAACX,EAAMU,GAC9B,IAAMI,EAAa,IAAIC,WAKvB,OAJAD,EAAWE,OAAS,WAChB,IAAMC,EAAUH,EAAWI,OAAOC,MAAM,KAAK,GAC7CT,EAAS,KAAOO,GAAW,MAExBH,EAAWM,cAAcpB,EACpC,EDtCMqB,EAAQ,mEAERC,EAA+B,oBAAfC,WAA6B,GAAK,IAAIA,WAAW,KAC9DxC,EAAI,EAAGA,EAAIsC,GAActC,IAC9BuC,EAAOD,EAAMG,WAAWzC,IAAMA,EAkB3B,IEhBH0C,ECLEpB,EAA+C,mBAAhBC,YAC/BoB,EAAe,SAACC,EAAeC,GACjC,GAA6B,iBAAlBD,EACP,MAAO,CACH5B,KAAM,UACNC,KAAM6B,EAAUF,EAAeC,IAGvC,IAAM7B,EAAO4B,EAAcG,OAAO,GAClC,MAAa,MAAT/B,EACO,CACHA,KAAM,UACNC,KAAM+B,EAAmBJ,EAAcK,UAAU,GAAIJ,IAG1CjC,EAAqBI,GAIjC4B,EAAcjF,OAAS,EACxB,CACEqD,KAAMJ,EAAqBI,GAC3BC,KAAM2B,EAAcK,UAAU,IAEhC,CACEjC,KAAMJ,EAAqBI,IARxBD,CAUf,EACMiC,EAAqB,SAAC/B,EAAM4B,GAC9B,GAAIvB,EAAuB,CACvB,IAAM4B,EHTQ,SAACC,GACnB,IAA8DnD,EAAUoD,EAAUC,EAAUC,EAAUC,EAAlGC,EAA+B,IAAhBL,EAAOxF,OAAeyC,EAAM+C,EAAOxF,OAAW8F,EAAI,EACnC,MAA9BN,EAAOA,EAAOxF,OAAS,KACvB6F,IACkC,MAA9BL,EAAOA,EAAOxF,OAAS,IACvB6F,KAGR,IAAME,EAAc,IAAInC,YAAYiC,GAAeG,EAAQ,IAAInB,WAAWkB,GAC1E,IAAK1D,EAAI,EAAGA,EAAII,EAAKJ,GAAK,EACtBoD,EAAWb,EAAOY,EAAOV,WAAWzC,IACpCqD,EAAWd,EAAOY,EAAOV,WAAWzC,EAAI,IACxCsD,EAAWf,EAAOY,EAAOV,WAAWzC,EAAI,IACxCuD,EAAWhB,EAAOY,EAAOV,WAAWzC,EAAI,IACxC2D,EAAMF,KAAQL,GAAY,EAAMC,GAAY,EAC5CM,EAAMF,MAAoB,GAAXJ,IAAkB,EAAMC,GAAY,EACnDK,EAAMF,MAAoB,EAAXH,IAAiB,EAAiB,GAAXC,EAE1C,OAAOG,CACX,CGVwBE,CAAO3C,GACvB,OAAO6B,EAAUI,EAASL,EAC9B,CAEI,MAAO,CAAEM,QAAQ,EAAMlC,KAAAA,EAE/B,EACM6B,EAAY,SAAC7B,EAAM4B,GACrB,MACS,SADDA,GAEO5B,aAAgBM,YAAc,IAAIJ,KAAK,CAACF,IAGxCA,CAEnB,EC7CM4C,EAAYC,OAAOC,aAAa,ICCzBC,WAASC,GAAAC,EAAAF,EAAAC,GAAA,IAAAE,EAAAC,EAAAJ,GAOlB,SAAAA,EAAY/G,GAAM,IAAAoH,EAOY,OAPZC,OAAAN,IACdK,EAAAF,EAAA9C,KAAAhC,OACKkF,UAAW,EAChBhG,EAAqBiG,EAAAH,GAAOpH,GAC5BoH,EAAKpH,KAAOA,EACZoH,EAAKI,MAAQxH,EAAKwH,MAClBJ,EAAKK,WAAa,GAClBL,EAAKM,OAAS1H,EAAK0H,OAAON,CAC9B,CA2FC,OA1FDO,EAAAZ,EAAA,CAAA,CAAAlF,IAAA,UAAA+F,MAOA,SAAQC,EAAKC,GACT,IAAMpI,EAAM,IAAIqI,MAAMF,GAMtB,OAJAnI,EAAIqE,KAAO,iBAEXrE,EAAIsI,YAAcF,EAClBG,EAAAC,EAAAnB,EAAAjF,WAAA,OAAAM,MAAAgC,KAAAhC,KAAW,QAAS1C,GACb0C,IACX,GACA,CAAAP,IAAA,OAAA+F,MAKA,WAKI,MAJI,WAAaxF,KAAKqF,YAAc,KAAOrF,KAAKqF,aAC5CrF,KAAKqF,WAAa,UAClBrF,KAAK+F,UAEF/F,IACX,GACA,CAAAP,IAAA,QAAA+F,MAKA,WAKI,MAJI,YAAcxF,KAAKqF,YAAc,SAAWrF,KAAKqF,aACjDrF,KAAKgG,UACLhG,KAAKiG,WAEFjG,IACX,GACA,CAAAP,IAAA,OAAA+F,MAMA,SAAKU,GACG,SAAWlG,KAAKqF,YAChBrF,KAAKmG,MAAMD,EAKnB,GACA,CAAAzG,IAAA,SAAA+F,MAKA,WACIxF,KAAKqF,WAAa,OAClBrF,KAAKkF,UAAW,EAChBW,EAAAC,EAAAnB,EAAAjF,WAAA,OAAAM,MAAAgC,KAAAhC,KAAW,OACf,GACA,CAAAP,IAAA,SAAA+F,MAMA,SAAO5D,GACH,IAAMwE,EAAS9C,EAAa1B,EAAM5B,KAAKsF,OAAO9B,YAC9CxD,KAAKqG,SAASD,EAClB,GACA,CAAA3G,IAAA,WAAA+F,MAKA,SAASY,GACLP,EAAAC,EAAAnB,EAAAjF,WAAA,OAAAM,MAAAgC,KAAAhC,KAAW,SAAUoG,EACzB,GACA,CAAA3G,IAAA,UAAA+F,MAKA,WACIxF,KAAKqF,WAAa,SAClBQ,EAAAC,EAAAnB,EAAAjF,WAAA,OAAAM,MAAAgC,KAAAhC,KAAW,QACf,KAAC2E,CAAA,EA1G0BnF,GHD3B8G,EAAW,mEAAmEvD,MAAM,IACpFzE,EAAS,GACTiI,EAAM,CAAE,EACRC,EAAO,EACP7F,EAAI,EAUR,SAAS8F,EAAOC,GACd,IAAIC,EAAU,GAEd,GACEA,EAAUL,EAASI,EAAMpI,GAAUqI,EACnCD,EAAME,KAAKC,MAAMH,EAAMpI,SAChBoI,EAAM,GAEf,OAAOC,CACT,CAyBA,SAASG,IACP,IAAIC,EAAMN,GAAQ,IAAIO,MAEtB,OAAID,IAAQ1D,GAAamD,EAAO,EAAGnD,EAAO0D,GACnCA,EAAK,IAAKN,EAAOD,IAC1B,CAKA,KAAO7F,EAAIrC,EAAQqC,IAAK4F,EAAID,EAAS3F,IAAMA,EAK3CmG,EAAML,OAASA,EACfK,EAAMvC,OAhCN,SAAgB0C,GACd,IAAIpD,EAAU,EAEd,IAAKlD,EAAI,EAAGA,EAAIsG,EAAI3I,OAAQqC,IAC1BkD,EAAUA,EAAUvF,EAASiI,EAAIU,EAAIvD,OAAO/C,IAG9C,OAAOkD,CACT,EAyBA,IAAAqD,EAAiBJ,KI3DHK,OAAG,SAAUhJ,GACzB,IAAI8I,EAAM,GAEV,IAAK,IAAItG,KAAKxC,EACRA,EAAIU,eAAe8B,KACjBsG,EAAI3I,SAAQ2I,GAAO,KACvBA,GAAOG,mBAAmBzG,GAAK,IAAMyG,mBAAmBjJ,EAAIwC,KAIhE,OAAOsG,CACT,EAScE,OAAG,SAASE,GAGxB,IAFA,IAAIC,EAAM,CAAA,EACNC,EAAQF,EAAGtE,MAAM,KACZpC,EAAI,EAAG6G,EAAID,EAAMjJ,OAAQqC,EAAI6G,EAAG7G,IAAK,CAC5C,IAAI8G,EAAOF,EAAM5G,GAAGoC,MAAM,KAC1BuE,EAAII,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,GAC5D,CACD,OAAOH,CACT,GChCaK,WAAOC,GAAA/C,EAAA8C,EAAAC,GAAA,IAAA9C,EAAAC,EAAA4C,GAChB,SAAAA,IAAc,IAAA3C,EAEW,OAFXC,OAAA0C,IACV3C,EAAAF,EAAAzE,WAAShC,YACJwJ,SAAU,EAAM7C,CACzB,CA0JC,OAzJDO,EAAAoC,EAAA,CAAA,CAAAlI,IAAA,OAAAqI,IAGA,WACI,MAAO,SACX,GACA,CAAArI,IAAA,SAAA+F,MAMA,WACIxF,KAAK+H,MACT,GACA,CAAAtI,IAAA,QAAA+F,MAMA,SAAMwC,GAAS,IAAAC,EAAAjI,KACXA,KAAKqF,WAAa,UAClB,IAAM6C,EAAQ,WACVD,EAAK5C,WAAa,SAClB2C,KAEJ,GAAIhI,KAAK6H,UAAY7H,KAAKkF,SAAU,CAChC,IAAIiD,EAAQ,EACRnI,KAAK6H,UACLM,IACAnI,KAAKG,KAAK,gBAAgB,aACpBgI,GAASD,GACf,KAEClI,KAAKkF,WACNiD,IACAnI,KAAKG,KAAK,SAAS,aACbgI,GAASD,GACf,IAER,MAEIA,GAER,GACA,CAAAzI,IAAA,OAAA+F,MAKA,WACIxF,KAAK6H,SAAU,EACf7H,KAAKoI,SACLpI,KAAKa,KAAK,OACd,GACA,CAAApB,IAAA,SAAA+F,MAKA,SAAO5D,GAAM,IAAAyG,EAAArI,MHpDK,SAACsI,EAAgB9E,GAGnC,IAFA,IAAM+E,EAAiBD,EAAevF,MAAMyB,GACtC0B,EAAU,GACPvF,EAAI,EAAGA,EAAI4H,EAAejK,OAAQqC,IAAK,CAC5C,IAAM6H,EAAgBlF,EAAaiF,EAAe5H,GAAI6C,GAEtD,GADA0C,EAAQhG,KAAKsI,GACc,UAAvBA,EAAc7G,KACd,KAER,CACA,OAAOuE,CACX,EGwDQuC,CAAc7G,EAAM5B,KAAKsF,OAAO9B,YAAY/B,SAd3B,SAAA2E,GAMb,GAJI,YAAciC,EAAKhD,YAA8B,SAAhBe,EAAOzE,MACxC0G,EAAKK,SAGL,UAAYtC,EAAOzE,KAEnB,OADA0G,EAAKpC,WACE,EAGXoC,EAAKhC,SAASD,MAKd,WAAapG,KAAKqF,aAElBrF,KAAK6H,SAAU,EACf7H,KAAKa,KAAK,gBACN,SAAWb,KAAKqF,YAChBrF,KAAK+H,OAKjB,GACA,CAAAtI,IAAA,UAAA+F,MAKA,WAAU,IAAAmD,EAAA3I,KACA4I,EAAQ,WACVD,EAAKxC,MAAM,CAAC,CAAExE,KAAM,YAEpB,SAAW3B,KAAKqF,WAChBuD,IAKA5I,KAAKG,KAAK,OAAQyI,EAE1B,GACA,CAAAnJ,IAAA,QAAA+F,MAOA,SAAMU,GAAS,IAAA2C,EAAA7I,KACXA,KAAKkF,UAAW,EHzHF,SAACgB,EAAS5D,GAE5B,IAAMhE,EAAS4H,EAAQ5H,OACjBiK,EAAiB,IAAI/J,MAAMF,GAC7BwK,EAAQ,EACZ5C,EAAQzE,SAAQ,SAAC2E,EAAQzF,GAErBwB,EAAaiE,GAAQ,GAAO,SAAA7C,GACxBgF,EAAe5H,GAAK4C,IACduF,IAAUxK,GACZgE,EAASiG,EAAetK,KAAKuG,GAErC,GACJ,GACJ,CG4GQuE,CAAc7C,GAAS,SAAAtE,GACnBiH,EAAKG,QAAQpH,GAAM,WACfiH,EAAK3D,UAAW,EAChB2D,EAAKhI,KAAK,QACd,GACJ,GACJ,GACA,CAAApB,IAAA,MAAA+F,MAKA,WACI,IAAIJ,EAAQpF,KAAKoF,OAAS,GACpB6D,EAASjJ,KAAKpC,KAAKsL,OAAS,QAAU,OACxCC,EAAO,IAEP,IAAUnJ,KAAKpC,KAAKwL,oBACpBhE,EAAMpF,KAAKpC,KAAKyL,gBAAkBvC,KAEjC9G,KAAKqC,gBAAmB+C,EAAMkE,MAC/BlE,EAAMmE,IAAM,GAGZvJ,KAAKpC,KAAKuL,OACR,UAAYF,GAAqC,MAA3BO,OAAOxJ,KAAKpC,KAAKuL,OACpC,SAAWF,GAAqC,KAA3BO,OAAOxJ,KAAKpC,KAAKuL,SAC3CA,EAAO,IAAMnJ,KAAKpC,KAAKuL,MAE3B,IAAMM,EAAetC,EAAQV,OAAOrB,GAEpC,OAAQ6D,EACJ,QAF8C,IAArCjJ,KAAKpC,KAAK8L,SAASC,QAAQ,KAG5B,IAAM3J,KAAKpC,KAAK8L,SAAW,IAAM1J,KAAKpC,KAAK8L,UACnDP,EACAnJ,KAAKpC,KAAKgM,MACTH,EAAanL,OAAS,IAAMmL,EAAe,GACpD,KAAC9B,CAAA,EA9JwBhD,GCK7B,SAASkF,IAAU,CACnB,IAAMC,EAIK,MAHK,IAAIzM,EAAe,CAC3BQ,SAAS,IAEMkM,aAEVC,WAAGC,GAAApF,EAAAmF,EAAAC,GAAA,IAAAnF,EAAAC,EAAAiF,GAOZ,SAAAA,EAAYpM,GAAM,IAAAoH,EAEd,GAFcC,OAAA+E,GACdhF,EAAAF,EAAA9C,UAAMpE,GACkB,oBAAbsM,SAA0B,CACjC,IAAMC,EAAQ,WAAaD,SAASE,SAChCjB,EAAOe,SAASf,KAEfA,IACDA,EAAOgB,EAAQ,MAAQ,MAE3BnF,EAAKqF,GACoB,oBAAbH,UACJtM,EAAK8L,WAAaQ,SAASR,UAC3BP,IAASvL,EAAKuL,KACtBnE,EAAKsF,GAAK1M,EAAKsL,SAAWiB,CAC9B,CAIA,IAAMI,EAAc3M,GAAQA,EAAK2M,YACa,OAA9CvF,EAAK3C,eAAiByH,IAAYS,EAAYvF,CAClD,CAwCC,OAvCDO,EAAAyE,EAAA,CAAA,CAAAvK,IAAA,UAAA+F,MAMA,WAAmB,IAAX5H,EAAIS,UAAAC,OAAA,QAAAkM,IAAAnM,UAAA,GAAAA,UAAA,GAAG,CAAA,EAEX,OADAoM,EAAc7M,EAAM,CAAEyM,GAAIrK,KAAKqK,GAAIC,GAAItK,KAAKsK,IAAMtK,KAAKpC,MAChD,IAAI8M,EAAQ1K,KAAK2K,MAAO/M,EACnC,GACA,CAAA6B,IAAA,UAAA+F,MAOA,SAAQ5D,EAAM7B,GAAI,IAAAkI,EAAAjI,KACR4K,EAAM5K,KAAK6K,QAAQ,CACrBC,OAAQ,OACRlJ,KAAMA,IAEVgJ,EAAIhL,GAAG,UAAWG,GAClB6K,EAAIhL,GAAG,SAAS,SAAAtC,GACZ2K,EAAK8C,QAAQ,iBAAkBzN,EACnC,GACJ,GACA,CAAAmC,IAAA,SAAA+F,MAKA,WAAS,IAAA6C,EAAArI,KACC4K,EAAM5K,KAAK6K,UACjBD,EAAIhL,GAAG,OAAQI,KAAKgL,OAAO3L,KAAKW,OAChC4K,EAAIhL,GAAG,SAAS,SAAAtC,GACZ+K,EAAK0C,QAAQ,iBAAkBzN,EACnC,IACA0C,KAAKiL,QAAUL,CACnB,KAACZ,CAAA,EAnEoBrC,GAqEZ+C,WAAO9F,GAAAC,EAAA6F,EAAA9F,GAAA,IAAAsG,EAAAnG,EAAA2F,GAOhB,SAAAA,EAAYC,EAAK/M,GAAM,IAAA+K,EAQL,OARK1D,OAAAyF,GAEnBxL,EAAqBiG,EADrBwD,EAAAuC,EAAAlJ,KAAAhC,OAC4BpC,GAC5B+K,EAAK/K,KAAOA,EACZ+K,EAAKmC,OAASlN,EAAKkN,QAAU,MAC7BnC,EAAKgC,IAAMA,EACXhC,EAAKwC,OAAQ,IAAUvN,EAAKuN,MAC5BxC,EAAK/G,UAAO4I,IAAc5M,EAAKgE,KAAOhE,EAAKgE,KAAO,KAClD+G,EAAKrH,SAASqH,CAClB,CAyIC,OAxIDpD,EAAAmF,EAAA,CAAA,CAAAjL,IAAA,SAAA+F,MAKA,WAAS,IAAAqD,EAAA7I,KACCpC,EAAOM,EAAK8B,KAAKpC,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjHA,EAAKC,UAAYmC,KAAKpC,KAAKyM,GAC3BzM,EAAKwN,UAAYpL,KAAKpC,KAAK0M,GAC3B,IAAMe,EAAOrL,KAAKqL,IAAM,IAAIhO,EAAeO,GAC3C,IACIyN,EAAIC,KAAKtL,KAAK8K,OAAQ9K,KAAK2K,IAAK3K,KAAKmL,OACrC,IACI,GAAInL,KAAKpC,KAAK2N,aAEV,IAAK,IAAI5K,KADT0K,EAAIG,uBAAyBH,EAAIG,uBAAsB,GACzCxL,KAAKpC,KAAK2N,aAChBvL,KAAKpC,KAAK2N,aAAa1M,eAAe8B,IACtC0K,EAAII,iBAAiB9K,EAAGX,KAAKpC,KAAK2N,aAAa5K,GAI/D,CACA,MAAO5C,GAAK,CACZ,GAAI,SAAWiC,KAAK8K,OAChB,IACIO,EAAII,iBAAiB,eAAgB,2BACzC,CACA,MAAO1N,GAAK,CAEhB,IACIsN,EAAII,iBAAiB,SAAU,MACnC,CACA,MAAO1N,GAAK,CAER,oBAAqBsN,IACrBA,EAAIK,gBAAkB1L,KAAKpC,KAAK8N,iBAEhC1L,KAAKpC,KAAK+N,iBACVN,EAAIO,QAAU5L,KAAKpC,KAAK+N,gBAE5BN,EAAIQ,mBAAqB,WACjB,IAAMR,EAAIhG,aAEV,MAAQgG,EAAIS,QAAU,OAAST,EAAIS,OACnCjD,EAAKkD,SAKLlD,EAAKzJ,cAAa,WACdyJ,EAAKkC,QAA8B,iBAAfM,EAAIS,OAAsBT,EAAIS,OAAS,EAC9D,GAAE,KAGXT,EAAIW,KAAKhM,KAAK4B,KACjB,CACD,MAAO7D,GAOH,YAHAiC,KAAKZ,cAAa,WACdyJ,EAAKkC,QAAQhN,EAChB,GAAE,EAEP,CACwB,oBAAbkO,WACPjM,KAAKkM,MAAQxB,EAAQyB,gBACrBzB,EAAQ0B,SAASpM,KAAKkM,OAASlM,KAEvC,GACA,CAAAP,IAAA,YAAA+F,MAKA,WACIxF,KAAKa,KAAK,WACVb,KAAKqM,SACT,GACA,CAAA5M,IAAA,SAAA+F,MAKA,SAAO5D,GACH5B,KAAKa,KAAK,OAAQe,GAClB5B,KAAKsM,WACT,GACA,CAAA7M,IAAA,UAAA+F,MAKA,SAAQlI,GACJ0C,KAAKa,KAAK,QAASvD,GACnB0C,KAAKqM,SAAQ,EACjB,GACA,CAAA5M,IAAA,UAAA+F,MAKA,SAAQ+G,GACJ,QAAI,IAAuBvM,KAAKqL,KAAO,OAASrL,KAAKqL,IAArD,CAIA,GADArL,KAAKqL,IAAIQ,mBAAqBhC,EAC1B0C,EACA,IACIvM,KAAKqL,IAAImB,OACb,CACA,MAAOzO,GAAK,CAEQ,oBAAbkO,iBACAvB,EAAQ0B,SAASpM,KAAKkM,OAEjClM,KAAKqL,IAAM,IAXX,CAYJ,GACA,CAAA5L,IAAA,SAAA+F,MAKA,WACI,IAAM5D,EAAO5B,KAAKqL,IAAIoB,aACT,OAAT7K,GACA5B,KAAKgL,OAAOpJ,EAEpB,GACA,CAAAnC,IAAA,QAAA+F,MAKA,WACIxF,KAAKqM,SACT,KAAC3B,CAAA,EAzJwBlL,GAkK7B,GAPAkL,EAAQyB,cAAgB,EACxBzB,EAAQ0B,SAAW,CAAA,EAMK,oBAAbH,SAEP,GAA2B,mBAAhBS,YAEPA,YAAY,WAAYC,QAEvB,GAAgC,mBAArB9M,iBAAiC,CAE7CA,iBADyB,eAAgBtC,EAAa,WAAa,SAChCoP,GAAe,EACtD,CAEJ,SAASA,IACL,IAAK,IAAIhM,KAAK+J,EAAQ0B,SACd1B,EAAQ0B,SAASvN,eAAe8B,IAChC+J,EAAQ0B,SAASzL,GAAG6L,OAGhC,CCvQO,IAAMI,EACqC,mBAAZC,SAAqD,mBAApBA,QAAQC,QAEhE,SAAArM,GAAE,OAAIoM,QAAQC,UAAUC,KAAKtM,EAAG,EAGhC,SAACA,EAAIrB,GAAY,OAAKA,EAAaqB,EAAI,EAAE,EAG3CuM,GAAYzP,EAAWyP,WAAazP,EAAW0P,aCHtDC,GAAqC,oBAAdC,WACI,iBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cACTC,YAAE1F,GAAA/C,EAAAyI,EAAA1F,GAAA,IAAA9C,EAAAC,EAAAuI,GAOX,SAAAA,EAAY1P,GAAM,IAAAoH,EAE0B,OAF1BC,OAAAqI,IACdtI,EAAAF,EAAA9C,UAAMpE,IACDyE,gBAAkBzE,EAAK2M,YAAYvF,CAC5C,CAoKC,OAnKDO,EAAA+H,EAAA,CAAA,CAAA7N,IAAA,OAAAqI,IAKA,WACI,MAAO,WACX,GACA,CAAArI,IAAA,SAAA+F,MAKA,WACI,GAAKxF,KAAKuN,QAAV,CAIA,IAAM5C,EAAM3K,KAAK2K,MACX6C,EAAYxN,KAAKpC,KAAK4P,UAEtB5P,EAAOsP,GACP,CAAA,EACAhP,EAAK8B,KAAKpC,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAChMoC,KAAKpC,KAAK2N,eACV3N,EAAK6P,QAAUzN,KAAKpC,KAAK2N,cAE7B,IACIvL,KAAK0N,GACyBR,GAIpB,IAAIF,GAAUrC,EAAK6C,EAAW5P,GAH9B4P,EACI,IAAIR,GAAUrC,EAAK6C,GACnB,IAAIR,GAAUrC,EAE/B,CACD,MAAOrN,GACH,OAAO0C,KAAKa,KAAK,QAASvD,EAC9B,CACA0C,KAAK0N,GAAGlK,WAAaxD,KAAKsF,OAAO9B,YD/CR,cCgDzBxD,KAAK2N,mBAtBL,CAuBJ,GACA,CAAAlO,IAAA,oBAAA+F,MAKA,WAAoB,IAAAyC,EAAAjI,KAChBA,KAAK0N,GAAGE,OAAS,WACT3F,EAAKrK,KAAKiQ,WACV5F,EAAKyF,GAAGI,QAAQC,QAEpB9F,EAAKS,UAET1I,KAAK0N,GAAGM,QAAUhO,KAAKiG,QAAQ5G,KAAKW,MACpCA,KAAK0N,GAAGO,UAAY,SAAAC,GAAE,OAAIjG,EAAK+C,OAAOkD,EAAGtM,KAAK,EAC9C5B,KAAK0N,GAAGS,QAAU,SAAApQ,GAAC,OAAIkK,EAAK8C,QAAQ,kBAAmBhN,EAAE,CAC7D,GACA,CAAA0B,IAAA,QAAA+F,MAMA,SAAMU,GAAS,IAAAmC,EAAArI,KACXA,KAAKkF,UAAW,EAGhB,IADA,IAAAkJ,EAAAA,WAEI,IAAMhI,EAASF,EAAQvF,GACjB0N,EAAa1N,IAAMuF,EAAQ5H,OAAS,EAC1C6D,EAAaiE,EAAQiC,EAAKhG,gBAAgB,SAAAT,GAmBtC,IAGQyG,EAAKqF,GAAG1B,KAAKpK,EAKrB,CACA,MAAO7D,GACP,CACIsQ,GAGAzB,GAAS,WACLvE,EAAKnD,UAAW,EAChBmD,EAAKxH,KAAK,QACd,GAAGwH,EAAKjJ,aAEhB,KAzCKuB,EAAI,EAAGA,EAAIuF,EAAQ5H,OAAQqC,IAAGyN,GA2C3C,GACA,CAAA3O,IAAA,UAAA+F,MAKA,gBAC2B,IAAZxF,KAAK0N,KACZ1N,KAAK0N,GAAG9E,QACR5I,KAAK0N,GAAK,KAElB,GACA,CAAAjO,IAAA,MAAA+F,MAKA,WACI,IAAIJ,EAAQpF,KAAKoF,OAAS,GACpB6D,EAASjJ,KAAKpC,KAAKsL,OAAS,MAAQ,KACtCC,EAAO,GAEPnJ,KAAKpC,KAAKuL,OACR,QAAUF,GAAqC,MAA3BO,OAAOxJ,KAAKpC,KAAKuL,OAClC,OAASF,GAAqC,KAA3BO,OAAOxJ,KAAKpC,KAAKuL,SACzCA,EAAO,IAAMnJ,KAAKpC,KAAKuL,MAGvBnJ,KAAKpC,KAAKwL,oBACVhE,EAAMpF,KAAKpC,KAAKyL,gBAAkBvC,KAGjC9G,KAAKqC,iBACN+C,EAAMmE,IAAM,GAEhB,IAAME,EAAetC,EAAQV,OAAOrB,GAEpC,OAAQ6D,EACJ,QAF8C,IAArCjJ,KAAKpC,KAAK8L,SAASC,QAAQ,KAG5B,IAAM3J,KAAKpC,KAAK8L,SAAW,IAAM1J,KAAKpC,KAAK8L,UACnDP,EACAnJ,KAAKpC,KAAKgM,MACTH,EAAanL,OAAS,IAAMmL,EAAe,GACpD,GACA,CAAAhK,IAAA,QAAA+F,MAMA,WACI,SAAUwH,IACJ,iBAAkBA,IAAahN,KAAKsO,OAAShB,EAAG5N,UAAU4O,KACpE,KAAChB,CAAA,EA9KmB3I,GCRX4J,GAAa,CACtBC,UAAWlB,GACXzF,QAASmC,GCGTyE,GAAK,0OAELC,GAAQ,CACR,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAGzIC,GAAiB,SAAkB1H,GAC/B,IAAI2H,EAAM3H,EACN4H,EAAI5H,EAAI0C,QAAQ,KAChB5L,EAAIkJ,EAAI0C,QAAQ,MAEV,GAANkF,IAAiB,GAAN9Q,IACXkJ,EAAMA,EAAIrD,UAAU,EAAGiL,GAAK5H,EAAIrD,UAAUiL,EAAG9Q,GAAG+Q,QAAQ,KAAM,KAAO7H,EAAIrD,UAAU7F,EAAGkJ,EAAI3I,SAO9F,IAJA,IAmCmB8G,EACfxD,EApCAmN,EAAIN,GAAGO,KAAK/H,GAAO,IACnB0D,EAAM,CAAE,EACRhK,EAAI,GAEDA,KACHgK,EAAI+D,GAAM/N,IAAMoO,EAAEpO,IAAM,GAa5B,OAVU,GAANkO,IAAiB,GAAN9Q,IACX4M,EAAIsE,OAASL,EACbjE,EAAIuE,KAAOvE,EAAIuE,KAAKtL,UAAU,EAAG+G,EAAIuE,KAAK5Q,OAAS,GAAGwQ,QAAQ,KAAM,KACpEnE,EAAIwE,UAAYxE,EAAIwE,UAAUL,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9EnE,EAAIyE,SAAU,GAGlBzE,EAAI0E,UAMR,SAAmBlR,EAAKyL,GACpB,IAAI0F,EAAO,WACPC,EAAQ3F,EAAKkF,QAAQQ,EAAM,KAAKvM,MAAM,KAEjB,KAArB6G,EAAK4F,OAAO,EAAG,IAA6B,IAAhB5F,EAAKtL,QACjCiR,EAAM3O,OAAO,EAAG,GAEmB,KAAnCgJ,EAAK4F,OAAO5F,EAAKtL,OAAS,EAAG,IAC7BiR,EAAM3O,OAAO2O,EAAMjR,OAAS,EAAG,GAGnC,OAAOiR,CACX,CAlBoBF,CAAU1E,EAAKA,EAAU,MACzCA,EAAI8E,UAmBerK,EAnBUuF,EAAW,MAoBpC/I,EAAO,CAAA,EAEXwD,EAAM0J,QAAQ,6BAA6B,SAAUY,EAAIC,EAAIC,GACrDD,IACA/N,EAAK+N,GAAMC,EAEvB,IAEWhO,GA1BA+I,CACX,ECnCakF,IAAAA,YAAMjL,GAAAC,EAAAgL,EAAAjL,GAAA,IAAAE,EAAAC,EAAA8K,GAQf,SAAAA,EAAYlF,GAAgB,IAAA3F,EAAXpH,EAAIS,UAAAC,OAAA,QAAAkM,IAAAnM,UAAA,GAAAA,UAAA,GAAG,CAAA,EAqFR,OArFU4G,OAAA4K,GACtB7K,EAAAF,EAAA9C,KAAAhC,MACI2K,GAAO,WAAQmF,EAAYnF,KAC3B/M,EAAO+M,EACPA,EAAM,MAENA,GACAA,EAAMgE,GAAShE,GACf/M,EAAK8L,SAAWiB,EAAIuE,KACpBtR,EAAKsL,OAA0B,UAAjByB,EAAIP,UAAyC,QAAjBO,EAAIP,SAC9CxM,EAAKuL,KAAOwB,EAAIxB,KACZwB,EAAIvF,QACJxH,EAAKwH,MAAQuF,EAAIvF,QAEhBxH,EAAKsR,OACVtR,EAAK8L,SAAWiF,GAAS/Q,EAAKsR,MAAMA,MAExChQ,EAAqBiG,EAAAH,GAAOpH,GAC5BoH,EAAKkE,OACD,MAAQtL,EAAKsL,OACPtL,EAAKsL,OACe,oBAAbgB,UAA4B,WAAaA,SAASE,SAC/DxM,EAAK8L,WAAa9L,EAAKuL,OAEvBvL,EAAKuL,KAAOnE,EAAKkE,OAAS,MAAQ,MAEtClE,EAAK0E,SACD9L,EAAK8L,WACoB,oBAAbQ,SAA2BA,SAASR,SAAW,aAC/D1E,EAAKmE,KACDvL,EAAKuL,OACoB,oBAAbe,UAA4BA,SAASf,KACvCe,SAASf,KACTnE,EAAKkE,OACD,MACA,MAClBlE,EAAKuJ,WAAa3Q,EAAK2Q,YAAc,CAAC,UAAW,aACjDvJ,EAAKK,WAAa,GAClBL,EAAK+K,YAAc,GACnB/K,EAAKgL,cAAgB,EACrBhL,EAAKpH,KAAO6M,EAAc,CACtBb,KAAM,aACNqG,OAAO,EACPvE,iBAAiB,EACjBwE,SAAS,EACT7G,eAAgB,IAChB8G,iBAAiB,EACjBC,oBAAoB,EACpBC,kBAAmB,CACfC,UAAW,MAEfC,iBAAkB,CAAE,EACpBC,qBAAqB,GACtB5S,GACHoH,EAAKpH,KAAKgM,KAAO5E,EAAKpH,KAAKgM,KAAKkF,QAAQ,MAAO,IAAM,IACtB,iBAApB9J,EAAKpH,KAAKwH,QACjBJ,EAAKpH,KAAKwH,MAAQ+B,EAAQ5C,OAAOS,EAAKpH,KAAKwH,QAG/CJ,EAAKyL,GAAK,KACVzL,EAAK0L,SAAW,KAChB1L,EAAK2L,aAAe,KACpB3L,EAAK4L,YAAc,KAEnB5L,EAAK6L,iBAAmB,KACQ,mBAArBhR,mBACHmF,EAAKpH,KAAK4S,qBAIV3Q,iBAAiB,gBAAgB,WACzBmF,EAAK8L,YAEL9L,EAAK8L,UAAUvQ,qBACfyE,EAAK8L,UAAUlI,QAEtB,IAAE,GAEe,cAAlB5D,EAAK0E,WACL1E,EAAK+L,qBAAuB,WACxB/L,EAAKiB,QAAQ,oBAEjBpG,iBAAiB,UAAWmF,EAAK+L,sBAAsB,KAG/D/L,EAAKsG,OAAOtG,CAChB,CA4dC,OA3dDO,EAAAsK,EAAA,CAAA,CAAApQ,IAAA,kBAAA+F,MAOA,SAAgB8I,GACZ,IAAMlJ,EAsdd,SAAejH,GACX,IAAM6S,EAAI,CAAA,EACV,IAAK,IAAIrQ,KAAKxC,EACNA,EAAIU,eAAe8B,KACnBqQ,EAAErQ,GAAKxC,EAAIwC,IAGnB,OAAOqQ,CACX,CA9dsBC,CAAMjR,KAAKpC,KAAKwH,OAE9BA,EAAM8L,ITjFU,ESmFhB9L,EAAM0L,UAAYxC,EAEdtO,KAAKyQ,KACLrL,EAAMkE,IAAMtJ,KAAKyQ,IACrB,IAAM7S,EAAO6M,EAAc,CAAA,EAAIzK,KAAKpC,KAAK2S,iBAAiBjC,GAAOtO,KAAKpC,KAAM,CACxEwH,MAAAA,EACAE,OAAQtF,KACR0J,SAAU1J,KAAK0J,SACfR,OAAQlJ,KAAKkJ,OACbC,KAAMnJ,KAAKmJ,OAEf,OAAO,IAAIoF,GAAWD,GAAM1Q,EAChC,GACA,CAAA6B,IAAA,OAAA+F,MAKA,WAAO,IACCsL,EADD7I,EAAAjI,KAEH,GAAIA,KAAKpC,KAAKuS,iBACVN,EAAOsB,wBACmC,IAA1CnR,KAAKuO,WAAW5E,QAAQ,aACxBmH,EAAY,gBAEX,IAAI,IAAM9Q,KAAKuO,WAAWjQ,OAK3B,YAHA0B,KAAKZ,cAAa,WACd6I,EAAKhH,aAAa,QAAS,0BAC9B,GAAE,GAIH6P,EAAY9Q,KAAKuO,WAAW,EAChC,CACAvO,KAAKqF,WAAa,UAElB,IACIyL,EAAY9Q,KAAKoR,gBAAgBN,EACpC,CACD,MAAO/S,GAGH,OAFAiC,KAAKuO,WAAW8C,aAChBrR,KAAKsL,MAET,CACAwF,EAAUxF,OACVtL,KAAKsR,aAAaR,EACtB,GACA,CAAArR,IAAA,eAAA+F,MAKA,SAAasL,GAAW,IAAAzI,EAAArI,KAChBA,KAAK8Q,WACL9Q,KAAK8Q,UAAUvQ,qBAGnBP,KAAK8Q,UAAYA,EAEjBA,EACKlR,GAAG,QAASI,KAAKuR,QAAQlS,KAAKW,OAC9BJ,GAAG,SAAUI,KAAKqG,SAAShH,KAAKW,OAChCJ,GAAG,QAASI,KAAK+K,QAAQ1L,KAAKW,OAC9BJ,GAAG,SAAS,WACbyI,EAAKpC,QAAQ,kBACjB,GACJ,GACA,CAAAxG,IAAA,QAAA+F,MAMA,SAAM8I,GAAM,IAAA3F,EAAA3I,KACJ8Q,EAAY9Q,KAAKoR,gBAAgB9C,GACjCkD,GAAS,EACb3B,EAAOsB,uBAAwB,EAC/B,IAAMM,EAAkB,WAChBD,IAEJV,EAAU9E,KAAK,CAAC,CAAErK,KAAM,OAAQC,KAAM,WACtCkP,EAAU3Q,KAAK,UAAU,SAAAsF,GACrB,IAAI+L,EAEJ,GAAI,SAAW/L,EAAI9D,MAAQ,UAAY8D,EAAI7D,KAAM,CAG7C,GAFA+G,EAAK+I,WAAY,EACjB/I,EAAK1H,aAAa,YAAa6P,IAC1BA,EACD,OACJjB,EAAOsB,sBAAwB,cAAgBL,EAAUxC,KACzD3F,EAAKmI,UAAU5I,OAAM,WACbsJ,GAEA,WAAa7I,EAAKtD,aAEtBgH,IACA1D,EAAK2I,aAAaR,GAClBA,EAAU9E,KAAK,CAAC,CAAErK,KAAM,aACxBgH,EAAK1H,aAAa,UAAW6P,GAC7BA,EAAY,KACZnI,EAAK+I,WAAY,EACjB/I,EAAKgJ,QACT,GACJ,KACK,CACD,IAAMrU,EAAM,IAAIqI,MAAM,eAEtBrI,EAAIwT,UAAYA,EAAUxC,KAC1B3F,EAAK1H,aAAa,eAAgB3D,EACtC,CACJ,MAEJ,SAASsU,IACDJ,IAGJA,GAAS,EACTnF,IACAyE,EAAUlI,QACVkI,EAAY,KAChB,CAEA,IAAM3C,EAAU,SAAA7Q,GACZ,IAAMuU,EAAQ,IAAIlM,MAAM,gBAAkBrI,GAE1CuU,EAAMf,UAAYA,EAAUxC,KAC5BsD,IACAjJ,EAAK1H,aAAa,eAAgB4Q,IAEtC,SAASC,IACL3D,EAAQ,mBACZ,CAEA,SAASH,IACLG,EAAQ,gBACZ,CAEA,SAAS4D,EAAUC,GACXlB,GAAakB,EAAG1D,OAASwC,EAAUxC,MACnCsD,GAER,CAEA,IAAMvF,EAAU,WACZyE,EAAUxQ,eAAe,OAAQmR,GACjCX,EAAUxQ,eAAe,QAAS6N,GAClC2C,EAAUxQ,eAAe,QAASwR,GAClCnJ,EAAKvI,IAAI,QAAS4N,GAClBrF,EAAKvI,IAAI,YAAa2R,IAE1BjB,EAAU3Q,KAAK,OAAQsR,GACvBX,EAAU3Q,KAAK,QAASgO,GACxB2C,EAAU3Q,KAAK,QAAS2R,GACxB9R,KAAKG,KAAK,QAAS6N,GACnBhO,KAAKG,KAAK,YAAa4R,GACvBjB,EAAUxF,MACd,GACA,CAAA7L,IAAA,SAAA+F,MAKA,WAOI,GANAxF,KAAKqF,WAAa,OAClBwK,EAAOsB,sBAAwB,cAAgBnR,KAAK8Q,UAAUxC,KAC9DtO,KAAKiB,aAAa,QAClBjB,KAAK2R,QAGD,SAAW3R,KAAKqF,YAChBrF,KAAKpC,KAAKsS,SACVlQ,KAAK8Q,UAAU5I,MAGf,IAFA,IAAIvH,EAAI,EACF6G,EAAIxH,KAAK0Q,SAASpS,OACjBqC,EAAI6G,EAAG7G,IACVX,KAAKiS,MAAMjS,KAAK0Q,SAAS/P,GAGrC,GACA,CAAAlB,IAAA,WAAA+F,MAKA,SAASY,GACL,GAAI,YAAcpG,KAAKqF,YACnB,SAAWrF,KAAKqF,YAChB,YAAcrF,KAAKqF,WAInB,OAHArF,KAAKiB,aAAa,SAAUmF,GAE5BpG,KAAKiB,aAAa,aACVmF,EAAOzE,MACX,IAAK,OACD3B,KAAKkS,YAAYC,KAAKC,MAAMhM,EAAOxE,OACnC,MACJ,IAAK,OACD5B,KAAKqS,mBACLrS,KAAKsS,WAAW,QAChBtS,KAAKiB,aAAa,QAClBjB,KAAKiB,aAAa,QAClB,MACJ,IAAK,QACD,IAAM3D,EAAM,IAAIqI,MAAM,gBAEtBrI,EAAIiV,KAAOnM,EAAOxE,KAClB5B,KAAK+K,QAAQzN,GACb,MACJ,IAAK,UACD0C,KAAKiB,aAAa,OAAQmF,EAAOxE,MACjC5B,KAAKiB,aAAa,UAAWmF,EAAOxE,MAMpD,GACA,CAAAnC,IAAA,cAAA+F,MAMA,SAAY5D,GACR5B,KAAKiB,aAAa,YAAaW,GAC/B5B,KAAKyQ,GAAK7O,EAAK0H,IACftJ,KAAK8Q,UAAU1L,MAAMkE,IAAM1H,EAAK0H,IAChCtJ,KAAK0Q,SAAW1Q,KAAKwS,eAAe5Q,EAAK8O,UACzC1Q,KAAK2Q,aAAe/O,EAAK+O,aACzB3Q,KAAK4Q,YAAchP,EAAKgP,YACxB5Q,KAAKyS,WAAa7Q,EAAK6Q,WACvBzS,KAAK0I,SAED,WAAa1I,KAAKqF,YAEtBrF,KAAKqS,kBACT,GACA,CAAA5S,IAAA,mBAAA+F,MAKA,WAAmB,IAAAqD,EAAA7I,KACfA,KAAKV,eAAeU,KAAK6Q,kBACzB7Q,KAAK6Q,iBAAmB7Q,KAAKZ,cAAa,WACtCyJ,EAAK5C,QAAQ,eAChB,GAAEjG,KAAK2Q,aAAe3Q,KAAK4Q,aACxB5Q,KAAKpC,KAAKiQ,WACV7N,KAAK6Q,iBAAiB9C,OAE9B,GACA,CAAAtO,IAAA,UAAA+F,MAKA,WACIxF,KAAK+P,YAAYnP,OAAO,EAAGZ,KAAKgQ,eAIhChQ,KAAKgQ,cAAgB,EACjB,IAAMhQ,KAAK+P,YAAYzR,OACvB0B,KAAKiB,aAAa,SAGlBjB,KAAK2R,OAEb,GACA,CAAAlS,IAAA,QAAA+F,MAKA,WACI,GAAI,WAAaxF,KAAKqF,YAClBrF,KAAK8Q,UAAU5L,WACdlF,KAAK0R,WACN1R,KAAK+P,YAAYzR,OAAQ,CACzB,IAAM4H,EAAUlG,KAAK0S,qBACrB1S,KAAK8Q,UAAU9E,KAAK9F,GAGpBlG,KAAKgQ,cAAgB9J,EAAQ5H,OAC7B0B,KAAKiB,aAAa,QACtB,CACJ,GACA,CAAAxB,IAAA,qBAAA+F,MAMA,WAII,KAH+BxF,KAAKyS,YACR,YAAxBzS,KAAK8Q,UAAUxC,MACftO,KAAK+P,YAAYzR,OAAS,GAE1B,OAAO0B,KAAK+P,YAGhB,IADA,IhBpYmB5R,EgBoYfwU,EAAc,EACThS,EAAI,EAAGA,EAAIX,KAAK+P,YAAYzR,OAAQqC,IAAK,CAC9C,IAAMiB,EAAO5B,KAAK+P,YAAYpP,GAAGiB,KAIjC,GAHIA,IACA+Q,GhBvYO,iBADIxU,EgBwYeyD,GhBjY1C,SAAoBqF,GAEhB,IADA,IAAI2L,EAAI,EAAGtU,EAAS,EACXqC,EAAI,EAAG6G,EAAIP,EAAI3I,OAAQqC,EAAI6G,EAAG7G,KACnCiS,EAAI3L,EAAI7D,WAAWzC,IACX,IACJrC,GAAU,EAELsU,EAAI,KACTtU,GAAU,EAELsU,EAAI,OAAUA,GAAK,MACxBtU,GAAU,GAGVqC,IACArC,GAAU,GAGlB,OAAOA,CACX,CAxBeuU,CAAW1U,GAGfyI,KAAKkM,KAPQ,MAOF3U,EAAI4U,YAAc5U,EAAI6U,QgBqY5BrS,EAAI,GAAKgS,EAAc3S,KAAKyS,WAC5B,OAAOzS,KAAK+P,YAAY/O,MAAM,EAAGL,GAErCgS,GAAe,CACnB,CACA,OAAO3S,KAAK+P,WAChB,GACA,CAAAtQ,IAAA,QAAA+F,MASA,SAAMC,EAAKwN,EAASlT,GAEhB,OADAC,KAAKsS,WAAW,UAAW7M,EAAKwN,EAASlT,GAClCC,IACX,GAAC,CAAAP,IAAA,OAAA+F,MACD,SAAKC,EAAKwN,EAASlT,GAEf,OADAC,KAAKsS,WAAW,UAAW7M,EAAKwN,EAASlT,GAClCC,IACX,GACA,CAAAP,IAAA,aAAA+F,MASA,SAAW7D,EAAMC,EAAMqR,EAASlT,GAS5B,GARI,mBAAsB6B,IACtB7B,EAAK6B,EACLA,OAAO4I,GAEP,mBAAsByI,IACtBlT,EAAKkT,EACLA,EAAU,MAEV,YAAcjT,KAAKqF,YAAc,WAAarF,KAAKqF,WAAvD,EAGA4N,EAAUA,GAAW,IACbC,UAAW,IAAUD,EAAQC,SACrC,IAAM9M,EAAS,CACXzE,KAAMA,EACNC,KAAMA,EACNqR,QAASA,GAEbjT,KAAKiB,aAAa,eAAgBmF,GAClCpG,KAAK+P,YAAY7P,KAAKkG,GAClBrG,GACAC,KAAKG,KAAK,QAASJ,GACvBC,KAAK2R,OAZL,CAaJ,GACA,CAAAlS,IAAA,QAAA+F,MAKA,WAAQ,IAAA2N,EAAAnT,KACE4I,EAAQ,WACVuK,EAAKlN,QAAQ,gBACbkN,EAAKrC,UAAUlI,SAEbwK,EAAkB,SAAlBA,IACFD,EAAK/S,IAAI,UAAWgT,GACpBD,EAAK/S,IAAI,eAAgBgT,GACzBxK,KAEEyK,EAAiB,WAEnBF,EAAKhT,KAAK,UAAWiT,GACrBD,EAAKhT,KAAK,eAAgBiT,IAqB9B,MAnBI,YAAcpT,KAAKqF,YAAc,SAAWrF,KAAKqF,aACjDrF,KAAKqF,WAAa,UACdrF,KAAK+P,YAAYzR,OACjB0B,KAAKG,KAAK,SAAS,WACXgT,EAAKzB,UACL2B,IAGAzK,GAER,IAEK5I,KAAK0R,UACV2B,IAGAzK,KAGD5I,IACX,GACA,CAAAP,IAAA,UAAA+F,MAKA,SAAQlI,GACJuS,EAAOsB,uBAAwB,EAC/BnR,KAAKiB,aAAa,QAAS3D,GAC3B0C,KAAKiG,QAAQ,kBAAmB3I,EACpC,GACA,CAAAmC,IAAA,UAAA+F,MAKA,SAAQ8N,EAAQ5N,GACR,YAAc1F,KAAKqF,YACnB,SAAWrF,KAAKqF,YAChB,YAAcrF,KAAKqF,aAEnBrF,KAAKV,eAAeU,KAAK6Q,kBAEzB7Q,KAAK8Q,UAAUvQ,mBAAmB,SAElCP,KAAK8Q,UAAUlI,QAEf5I,KAAK8Q,UAAUvQ,qBACoB,mBAAxBC,qBACPA,oBAAoB,UAAWR,KAAK+Q,sBAAsB,GAG9D/Q,KAAKqF,WAAa,SAElBrF,KAAKyQ,GAAK,KAEVzQ,KAAKiB,aAAa,QAASqS,EAAQ5N,GAGnC1F,KAAK+P,YAAc,GACnB/P,KAAKgQ,cAAgB,EAE7B,GACA,CAAAvQ,IAAA,iBAAA+F,MAOA,SAAekL,GAIX,IAHA,IAAM6C,EAAmB,GACrB5S,EAAI,EACF6S,EAAI9C,EAASpS,OACZqC,EAAI6S,EAAG7S,KACLX,KAAKuO,WAAW5E,QAAQ+G,EAAS/P,KAClC4S,EAAiBrT,KAAKwQ,EAAS/P,IAEvC,OAAO4S,CACX,KAAC1D,CAAA,EA1jBuBrQ,GA4jB5BqQ,GAAOzF,STpiBiB,SU7BT,SAACO,EAAK/M,GAAI,OAAK,IAAIiS,GAAOlF,EAAK/M,EAAK"}